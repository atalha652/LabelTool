{"version":3,"sources":["images/tool.png","images/image0.jpg","images/image1.jpg","images/image2.jpg","images/image3.jpeg","components/home.js","components/annotation-tool.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","img0","require","img1","img2","img3","Component","AnnotationTool","props","state","imgList","src","name","selectImage","selectOptions","onSelectImage","bind","goToWeb","this","setState","console","log","window","location","className","href","logo_f","alt","style","width","type","onClick","aria-hidden","selectedImage","taskDescription","images","regionClsList","enabledTools","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,8PCIrCC,EAAOC,EAAQ,KACfC,EAAOD,EAAQ,KACfE,EAAOF,EAAQ,KACfG,EAAOH,EAAQ,K,GAEFI,Y,QCLbL,EAAOC,EAAQ,KACfC,EAAOD,EAAQ,KACfE,EAAOF,EAAQ,KACfG,EAAOH,EAAQ,KAoENK,EAjEf,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,QAAS,CACL,CACIC,IAAKV,EAAMW,KAAM,WAErB,CACID,IAAKR,EAAMS,KAAM,WAErB,CACID,IAAKP,EAAMQ,KAAM,WAErB,CACID,IAAKN,EAAMO,KAAM,YAGzBC,YAAaZ,EACba,cAAe,CAAC,MAAO,MAAO,QAAS,aAAc,UAAW,SAAU,WAAY,OAAQ,OAAQ,iBAG1G,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBAvBA,EADvB,0DA2BkBH,GACVK,KAAKC,SAAS,CAAEN,gBAAe,WAAQO,QAAQC,IAAI,cAAeR,QA5B1E,gCAgCQS,OAAOC,SAAW,wBAhC1B,+BAmCc,IAAD,EAC2CL,KAAKT,MAA7CC,EADH,EACGA,QAASI,EADZ,EACYA,cAAeD,EAD3B,EAC2BA,YAEhC,OACI,6BACI,yBAAKW,UAAU,sFACX,uBAAGA,UAAU,mDAAmDC,KAAK,KACjE,yBAAKd,IAAKe,IAAQF,UAAU,aAAaG,IAAI,OAAOC,MAAO,CAAEC,MAAO,YAGxE,wBAAIL,UAAU,uCACV,yBAAKA,UAAU,uBAAf,UAEJ,wBAAIA,UAAU,6DACV,4BAAQM,KAAK,SAASC,QAASb,KAAKD,QAASO,UAAU,wBACnD,uBAAGA,UAAU,iBAAiBQ,cAAY,SAD9C,UAIR,kBAAC,IAAD,CACIC,cAAepB,EACfqB,gBAAgB,oCAChBC,OAAQzB,EACR0B,cAAetB,EACfuB,aAAc,CAAC,aAAc,iBA1DjD,GAAoC/B,aCIrBgC,MATf,WACE,OACE,yBAAKd,UAAU,OAEb,kBAAC,EAAD,QCGce,QACW,cAA7BjB,OAAOC,SAASiB,UAEe,UAA7BlB,OAAOC,SAASiB,UAEhBlB,OAAOC,SAASiB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.e476cd0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tool.746aa767.png\";","module.exports = __webpack_public_path__ + \"static/media/image0.09facdd3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image1.e325bde4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image2.01e8001b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image3.39194024.jpeg\";","import React, { Component } from 'react'\nimport logo_f from '../images/tool.png'\nimport Annotation from 'react-image-annotation'\n\nconst img0 = require('../images/image0.jpg')\nconst img1 = require('../images/image1.jpg')\nconst img2 = require('../images/image2.jpg')\nconst img3 = require('../images/image3.jpeg')\n\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            index: 0,\n            imgList: [img0, img1, img2, img3],\n            annotations: [],\n            annotation: {},\n            active: false,\n            isEdit: false\n        }\n\n        this.handlePrev = this.handlePrev.bind(this)\n        this.handleNext = this.handleNext.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    /**\n     * Function for Previous Image Button\n    */\n    handlePrev() {\n        if (this.state.index - 1 === -1) {\n            this.setState({\n                index: this.state.imgList.length - 1\n            })\n        } else {\n            this.setState({\n                index: this.state.index - 1\n            })\n        }\n    }\n\n    /**\n     * Function for Next Image Button\n    */\n    handleNext() {\n        if (this.state.index + 1 === this.state.imgList.length) {\n            this.setState({\n                index: 0\n            })\n        } else {\n            this.setState({\n                index: this.state.index + 1\n            })\n        }\n    }\n\n    /**\n     * Image Annotation Function\n    */\n    onChange(annotation) {\n        this.setState({ annotation }, () => { console.log('annotation', annotation) })\n    }\n\n    /**\n     * Submit annotated object Function\n    */\n    onSubmit(annotation) {\n        const { geometry, data } = annotation\n        this.setState({\n            annotation: {},\n            annotations: this.state.annotations.concat({\n                geometry,\n                data: {\n                    ...data,\n                    id: Math.random()\n                }\n            })\n        })\n    }\n\n\n    render() {\n        const { active } = this.state\n\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-light sticky-top bg-light flex-md-nowrap p-0 border-bottom-lightGrey\">\n                    <a className=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3 border-right-lightGrey \" href=\"#\">\n                        <img src={logo_f} className=\"img-fluid \" alt='logo' style={{ width: '150px' }} />\n                    </a>\n                    <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <ul className=\"navbar-nav px-3 headerList\">\n                        <li className=\"nav-item text-nowrap\">\n                            <button type=\"button\" className=\"btn btn-light btn-sm mr-4\" onClick={this.handlePrev}>\n                                <div><i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i></div>Prev</button>\n                        </li>\n                        <li className=\"nav-item text-nowrap mr-4\">\n                            <button type=\"button\" className=\"btn btn-light btn-sm\" onClick={this.handleNext}>\n                                <div><i className=\"fa fa-angle-right \" aria-hidden=\"true\"></i></div>Next</button>\n                        </li>\n                        <li className=\"nav-item text-nowrap border-left-lightGrey mr-4\">\n                            {/* <button type=\"button\" className=\"btn btn-light btn-sm\">\n                                <div><i className=\"fa fa-expand\" aria-hidden=\"true\"></i></div>Fullscreen</button> */}\n                        </li>\n                        <li className=\"nav-item text-nowrap \">\n                            <button type=\"button\" className=\"btn btn-light btn-sm\">\n                                <div><i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i></div>Exit</button>\n                        </li>\n                    </ul>\n                </nav>\n\n                <div className=\"d-flex\" id=\"wrapper\">\n                    <div className=\"border-right\" id=\"sidebar-wrapper\">\n                        <ul className=\"navbar-nav px-3\">\n                            <li className=\"sideList\">\n                                <button className=\"nav-link side-nav-link btn-class-none\">\n                                    <i className=\"fa fa-mouse-pointer\" aria-hidden=\"true\"></i>\n                                </button>\n                            </li>\n                            <li className=\"sideList\">\n                                <button className=\"nav-link side-nav-link btn-class-none\" >\n                                    <i className=\"fa fa-hand-paper-o\" aria-hidden=\"true\"></i>\n                                </button>\n                            </li>\n                            <li className=\"sideList\">\n                                <button className=\"nav-link side-nav-link btn-class-none\" >\n                                    <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                                </button>\n                            </li>\n                            <li className=\"sideList\">\n                                <button className=\"nav-link side-nav-link btn-class-none\" >\n                                    <i className=\"fa fa-object-ungroup\" aria-hidden=\"true\"></i>\n                                </button>\n                            </li>\n                            <li className=\"sideList\">\n                                <button className=\"nav-link side-nav-link btn-class-none\" >\n                                    <i className=\"fa fa-tag\" aria-hidden=\"true\"></i>\n                                </button>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div id=\"page-content-wrapper\">\n                        <div className=\"container\">\n                            <div className=\"row mt-4 ml-1\">\n                                <div className=\"col-md-12\">\n                                    <Annotation\n                                        src={this.state.imgList[this.state.index]}\n                                        alt='Two pebbles anthropomorphized holding hands'\n                                        annotations={this.state.annotations}\n                                        type={this.state.type}\n                                        value={this.state.annotation}\n                                        onChange={this.onChange}\n                                        onSubmit={this.onSubmit}\n                                    />\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport logo_f from '../images/tool.png'\nimport ReactImageAnnotate from \"react-image-annotate\"\n\nconst img0 = require('../images/image0.jpg')\nconst img1 = require('../images/image1.jpg')\nconst img2 = require('../images/image2.jpg')\nconst img3 = require('../images/image3.jpeg')\n\n\nexport class AnnotationTool extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            imgList: [\n                {\n                    src: img0, name: \"Image 0\"\n                },\n                {\n                    src: img1, name: \"Image 1\"\n                },\n                {\n                    src: img2, name: \"Image 2\"\n                },\n                {\n                    src: img3, name: \"Image 3\"\n                }\n            ],\n            selectImage: img0,\n            selectOptions: ['Car', 'Bus', 'Truck', 'Motorcycle', 'Trailer', 'Person', 'Sidewalk', 'Wall', \"Sign\", \"traffic Sign\"]\n\n        }\n        this.onSelectImage = this.onSelectImage.bind(this)\n        this.goToWeb = this.goToWeb.bind(this)\n    }\n\n    onSelectImage(selectImage) {\n        this.setState({ selectImage }, () => { console.log('selectImage', selectImage) })\n    }\n\n    goToWeb() {\n        window.location = 'http://iai-dlt.com/';\n    }\n\n    render() {\n        const { imgList, selectOptions, selectImage } = this.state\n\n        return (\n            <div>\n                <nav className=\"navbar navbar-light sticky-top bg-light flex-md-nowrap p-0 border-bottom-lightGrey\">\n                    <a className=\"navbar-brand   mr-0 px-3 border-right-lightGrey \" href=\"#\">\n                        <img src={logo_f} className=\"img-fluid \" alt='logo' style={{ width: '150px' }} />\n                    </a>\n\n                    <li className=\"nav-item mr-auto nav-listStyle-none\">\n                        <div className=\"nav-link text-muted\" >Demo </div>\n                    </li>\n                    <li className=\"nav-item ml-auto nav-listStyle-none border-left-lightGrey\">\n                        <button type=\"button\" onClick={this.goToWeb} className=\"btn btn-light btn-lg\">\n                            <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>Exit</button>\n                    </li>\n                </nav>\n                <ReactImageAnnotate\n                    selectedImage={selectImage}\n                    taskDescription=\"# Draw region around each object.\"\n                    images={imgList}\n                    regionClsList={selectOptions}\n                    enabledTools={[\"create-box\", \"select\"]}\n                />\n            </div>\n        )\n    }\n}\n\nexport default AnnotationTool\n","import React from 'react';\nimport './App.css';\nimport Home from './components/home';\nimport AnnotationTool from './components/annotation-tool';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Home /> */}\n      <AnnotationTool />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}